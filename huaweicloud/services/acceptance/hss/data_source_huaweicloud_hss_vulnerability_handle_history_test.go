package hss

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"

	"github.com/huaweicloud/terraform-provider-huaweicloud/huaweicloud/services/acceptance"
)

func TestAccDataSourceVulnerabilityHandleHistory_basic(t *testing.T) {
	var (
		dataSource = "data.huaweicloud_hss_vulnerability_handle_history.test"
		dc         = acceptance.InitDataSourceCheck(dataSource)
	)

	resource.Test(t, resource.TestCase{
		PreCheck: func() {
			acceptance.TestAccPreCheck(t)
			// Before running the test, you need to prepare a host with host protection enabled.
			// And manually handle a vulnerability on the host.
			acceptance.TestAccPreCheckHSSHostProtectionHostId(t)
		},
		ProviderFactories: acceptance.TestAccProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceVulnerabilityHandleHistory_basic,
				Check: resource.ComposeTestCheckFunc(
					dc.CheckResourceExists(),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.#"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.id"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.user_name"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.type"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.host_id"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.host_name"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.private_ip"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.handle_time"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.status"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.description"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.vul_id"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.vul_name"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.asset_value"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.cve_list.#"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.app_name"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.app_version"),
					resource.TestCheckResourceAttrSet(dataSource, "data_list.0.handle_type"),

					resource.TestCheckOutput("is_vul_id_filter_useful", "true"),
					resource.TestCheckOutput("is_vul_type_filter_useful", "true"),
					resource.TestCheckOutput("is_status_filter_useful", "true"),
					resource.TestCheckOutput("is_asset_value_filter_useful", "true"),
					resource.TestCheckOutput("is_host_name_filter_useful", "true"),
					resource.TestCheckOutput("is_private_ip_filter_useful", "true"),
					resource.TestCheckOutput("is_sort_filter_useful", "true"),
					resource.TestCheckOutput("is_eps_filter_useful", "true"),
				),
			},
		},
	})
}

const testAccDataSourceVulnerabilityHandleHistory_basic = `
data "huaweicloud_hss_vulnerability_handle_history" "test" {}

locals {
  vul_id = data.huaweicloud_hss_vulnerability_handle_history.test.data_list[0].vul_id
}

data "huaweicloud_hss_vulnerability_handle_history" "vul_id_filter" {
  vul_id = local.vul_id
}

output "is_vul_id_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.vul_id_filter.data_list) > 0 && alltrue(
    [for v in data.huaweicloud_hss_vulnerability_handle_history.vul_id_filter.data_list[*].vul_id : v == local.vul_id]
  )
}

locals {
  vul_type = data.huaweicloud_hss_vulnerability_handle_history.test.data_list[0].type
}

data "huaweicloud_hss_vulnerability_handle_history" "vul_type_filter" {	
  vul_type = local.vul_type
}

output "is_vul_type_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.vul_type_filter.data_list) > 0 && alltrue(
    [for v in data.huaweicloud_hss_vulnerability_handle_history.vul_type_filter.data_list[*].type : v == local.vul_type]
  )
}

locals {
  status = data.huaweicloud_hss_vulnerability_handle_history.test.data_list[0].status
}

data "huaweicloud_hss_vulnerability_handle_history" "status_filter" {
  status = [local.status]
}

output "is_status_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.status_filter.data_list) > 0 && alltrue(
    [for v in data.huaweicloud_hss_vulnerability_handle_history.status_filter.data_list[*].status : v == local.status]
  )
}

locals {
  asset_value = data.huaweicloud_hss_vulnerability_handle_history.test.data_list[0].asset_value
}

data "huaweicloud_hss_vulnerability_handle_history" "asset_value_filter" {
  asset_value = local.asset_value
}

output "is_asset_value_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.asset_value_filter.data_list) > 0 && alltrue(	
    [for v in data.huaweicloud_hss_vulnerability_handle_history.asset_value_filter.data_list[*].asset_value : v == local.asset_value]
  )
}

locals {
  host_name = data.huaweicloud_hss_vulnerability_handle_history.test.data_list[0].host_name
}

data "huaweicloud_hss_vulnerability_handle_history" "host_name_filter" {
  host_name = local.host_name
}

output "is_host_name_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.host_name_filter.data_list) > 0 && alltrue(	
    [for v in data.huaweicloud_hss_vulnerability_handle_history.host_name_filter.data_list[*].host_name : v == local.host_name]
  )
}

locals {
  private_ip = data.huaweicloud_hss_vulnerability_handle_history.test.data_list[0].private_ip
}

data "huaweicloud_hss_vulnerability_handle_history" "private_ip_filter" {
  private_ip = local.private_ip
}

output "is_private_ip_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.private_ip_filter.data_list) > 0 && alltrue(	
    [for v in data.huaweicloud_hss_vulnerability_handle_history.private_ip_filter.data_list[*].private_ip : v == local.private_ip]
  )
}

data "huaweicloud_hss_vulnerability_handle_history" "sort_filter" {
  sort_key = "handle_time"
  sort_dir = "asc"
}

output "is_sort_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.sort_filter.data_list) > 0 
}

data "huaweicloud_hss_vulnerability_handle_history" "eps_filter" {
  enterprise_project_id = "all_granted_eps"
}

output "is_eps_filter_useful" {
  value = length(data.huaweicloud_hss_vulnerability_handle_history.eps_filter.data_list) > 0
}
`
